" Shortcut Conflicts for Active Keymap (IdeaVim vs IDE)
" <C-a> <C-x> <C-c> <C-v> <C-z> <C-s> <C-r>
" <C-b> <C-f> <C-u> <C-d> <C-e> <C-y>
" <C-i> <C-o>
" <C-h> <C-j> <C-k> <C-l>
" <C-r> <C-q> <C-m> <C-n> <C-[>
" <C-^>(as <C-S-6>)

let mapleader=" "
let g:mapleader=" "

set showmode
set number
" set relativenumber
set hlsearch
set incsearch
set ignorecase
set smartcase
set history=1000
set clipboard^=unnamedplus,unnamed

" == Plugins ==
" Notice: 搭配 Smart Input 使用，已解决自动切换中英输入法问题
Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'machakann/vim-highlightedyank'
Plug 'vim-scripts/argtextobj.vim'
Plug 'michaeljsmith/vim-indent-object'

Plug 'easymotion/vim-easymotion'
" Enable default mappings
let g:EasyMotion_do_mapping = 1
" easymotion-s 是一个字符；easymotion-s2 是两个字符；easymotion-sn 是n个字符
" 双向：easymotion-s 向后找：easymotion-f 向前找：easymotion-F（类似vim-sneak）
nmap s <Plug>(easymotion-s2)
xmap s <Plug>(easymotion-s2)
" 双向跳行 注意 <Plug>(easymotion-j) 向后跳行 <Plug>(easymotion-k) 向前跳行
nmap <Leader>jl <Plug>(easymotion-bd-jk)
xmap <Leader>jl <Plug>(easymotion-bd-jk)

Plug 'terryma/vim-multiple-cursors'
" 重新映射 multiple-cursors shortcuts 快捷键
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap <C-q> <Plug>SkipOccurrence
xmap <C-q> <Plug>SkipOccurrence
nmap <C-x> <Plug>RemoveOccurrence
xmap <C-x> <Plug>RemoveOccurrence
nmap g<C-n> <Plug>AllWholeOccurrences
xmap g<C-n> <Plug>AllWholeOccurrences

Plug 'vim-scripts/ReplaceWithRegister'
nmap <leader>r  <Plug>ReplaceWithRegisterOperator
nmap <leader>rr <Plug>ReplaceWithRegisterLine
xmap <leader>r  <Plug>ReplaceWithRegisterVisual

" == IdeaVim tips and tricks ==
set ideajoin
set ideamarks
set clipboard+=ideaput
" set ideastatusicon=gray

" == Key mappings ==

" IDEA 快捷键调整
" Ctrl+j 取消原本的 Insert Live Template    Ctrl+k 取消原本的 Commit
" Ctrl+j => Up   Ctrl+k => Down （即所有用到方向上键和方向下键的同时也可以Ctrl+j和Ctrl+k做键盘映射、Terminal除外）
" 处理即使idea配置了快捷键，但在vim下Editor中<C-j>和<C-k>失效情况
imap <C-j> <Down>
imap <C-k> <Up>

" nmap <C-o> <Action>(Back)
" nmap <c-i> <Action>(Forward)

" <C-w> 这个快捷键很重要，分配给IDE使用
" 窗口分屏
nmap <leader>sv <Action>(SplitVertically)
nmap <leader>sh <Action>(SplitHorizontally)
nmap <leader>sc <Action>(Unsplit)
nmap <leader>so <Action>(UnsplitAll)
" 窗口导航
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <leader>wn <Action>(NextSplitter)
nmap <leader>wp <Action>(PrevSplitter)
" Full screen window
nmap <leader>wf <Action>(HideAllWindows)
" 设置窗口大小 (待确认)
nmap <leader>h <C-w><
nmap <leader>l <C-w>>
nmap <leader>j <C-w>-
nmap <leader>k <C-w>+
nmap <leader>= <C-w>=

" 取消搜索高亮
nmap <leader>nh :noh<CR>
" 连续缩进代码
vmap < <gv
vmap > >gv
" 上下移动选中文本并保持缩进
nmap <A-j> :m .+1<CR>==
nmap <A-k> :m .-2<CR>==
imap <A-j> <Esc>:m .+1<CR>==gi
imap <A-k> <Esc>:m .-2<CR>==gi
vmap <A-j> :move '>+1<CR>gv=gv
vmap <A-k> :move '<-2<CR>gv=gv

" == 查找 ==
" 文件查找
nmap <leader>ff <Action>(GotoFile)
" 全局模糊搜索
nmap <leader>fg <Action>(FindInPath)
" 在当前文件查找
nmap <leader>fi <Action>(Find)
" 查找类
nmap <leader>fc <Action>(GotoClass)
" 等价于idea中的shift+shift
nmap <leader>fs <Action>(SearchEverywhere)
" Recent files
nmap <leader>fo <Action>(RecentFiles)
" Find Usages
nmap <leader>fu <Action>(FindUsages)
" All_file bookmarks
nmap <leader>fM <Action>(ShowBookmarks)
" File Structure
nmap <leader>fs <Action>(FileStructurePopup)

" == 语法 ==
" 实现类或方法查找
nmap gi <Action>(GotoImplementation)
" 找到被实现的类或方法
nmap gs <Action>(GotoSuperMethod)
" 跳转到定义或引用处
nmap gd <Action>(GotoDeclaration)
" 查找所有引用
nmap gr <Action>(GotoDeclaration)
" 查找所有引用（面板方式）
nmap gR <Action>(FindUsages)
" 查看hover文档提示
nmap gh <Action>(QuickJavaDoc)
nmap gH <Action>(ParameterInfo)
" 跳转到类型定义处
nmap <leader>D <Action>(GotoTypeDeclaration)
" 重命名symbol
nmap <leader>rn <Action>(RenameElement)
" code action(quickfix)
nmap <leader>ca <Action>(ShowIntentionActions)
xmap <leader>ca <Action>(ShowIntentionActions)
" 格式化代码
nmap <leader>lf <Action>(ReformatCode)
vmap <leader>lf <Action>(ReformatCode)
" 跳转到下一个错误（诊断-Diagnosis）
nmap [d <Action>(GotoNextError)
" 跳转到上一个错误（诊断-Diagnosis）
nmap ]d <Action>(GotoPreviousError)

" == 窗口 ==
" 关闭当前窗口
nmap <leader>bc <Action>(CloseContent)
" 打开关闭的窗口
nmap <leader>br <Action>(ReopenClosedTab)
" 关闭其他窗口
nmap <leader>bo <Action>(CloseAllEditorsButActive)
" 跳到下一个窗口
nmap <leader>bj <Action>(NextTab)
" 跳到上一个窗口
nmap <leader>bk <Action>(PreviousTab)
" 关闭左边的所有窗口
nmap <leader>bh <Action>(CloseAllToTheLeft)
" 关闭右边的所有窗口
nmap <leader>bl <Action>(CloseAllToTheRight)
" Pin/Unpin Tab
nmap <leader>bp <Action>(PinActiveEditorTab)
" jump between two tabs alternately (Ctrl-^)
nmap <leader>bb <C-^>

" == 书签 ==
" 添加书签
nmap mm <Action>(ToggleBookmark)
" 编辑书签
nmap mi <Action>(EditBookmark)
" 跳转到下一个书签
nmap mn <Action>(GotoNextBookmarkInEditor)
" 跳转到上一个书签
nmap mp <Action>(GotoPreviousBookmarkInEditor)
" 跳转到下一个书签（所有文件）
nmap mN <Action>(GotoNextBookmark)
" 跳转到上一个书签（所有文件）
nmap mP <Action>(GotoPreviousBookmark)
" 查看所有书签（所有文件）
nmap ma <Action>(ShowBookmarks)

" == git ==
nmap <leader>hr <Action>(Vcs.RollbackChangedLines)
nmap <leader>hk <Action>(VcsShowPrevChangeMarker)
nmap <leader>hj <Action>(VcsShowNextChangeMarker)
" 比较当前行
nmap <leader>hD <Action>(Vcs.ShowDiffChangedLines)
" 弹出快速操作列表
nmap <leader>yp <Action>(Vcs.QuickListPopupAction)

nmap <leader>gb <Action>(Git.Branches)
nmap <leader>gp <Action>(Git.Pull)
nmap <leader>gP <Action>(Git.Push)
nmap <leader>gr <Action>(Git.Rebase)
nmap <leader>gm <Action>(Git.Merge)

nmap <leader>ri <Action>(Replace)
nmap <leader>fi <Action>(Find)

" == tool windows ==
" <A-0> Commit
" <A-1> Project
" <A-2> Bookmarks
" <A-3> Find
" <A-4> Run
" <A-5> Debug
" <A-6> Problems
" <A-7> Structure
" <A-8> Service
" <A-9> Version Control
" .. Hierarchy
" .. TODO
" <A-f12> Terminal

" 定位到文件
nmap <leader>m :NERDTreeFind<CR>
" 打开文件树、终端、大纲等推荐使用 idea 快捷键，单独映射为一个vim键不好用
